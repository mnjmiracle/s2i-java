apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      builder: s2i-java
    name: centos
    namespace: openshift
  spec:
    tags:
    - from:
        kind: DockerImage
        name: openshift/base-centos7:latest
      name: latest
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: s2i-java
    namespace: openshift
    labels:
      builder: s2i-java
  spec:
    tags:
    - annotations:
        description: Java OpenJDK S2I image
        iconClass: icon-jboss
        supports: java:8,maven:3,gradle:2.6,protoc:3.1
        tags: java,maven,gradle,springboot,protoc,fatjar
        version: "1.0"
      name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: s2i-java
    namespace: openshift
    labels:
      builder: s2i-java
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: s2i-java:latest
    source:
      git:
        ref: master
        uri: https://github.com/mnjmiracle/s2i-java.git
      type: Git
    strategy:
      dockerStrategy:
        from:
          kind: ImageStreamTag
          name: centos:latest
      type: Docker
    triggers:
    - github:
        secret: secret
      type: GitHub
    - generic:
        secret: secret
      type: Generic
    - imageChange:
      type: ImageChange
- apiVersion: v1
  kind: Template
  labels:
    template: springboot-maven
  metadata:
    annotations:
      description: Spring Boot project built with maven
      iconClass: icon-jboss
      tags: quickstart,springboot,maven,java,protoc
    name: springboot-maven
    namespace: openshift
  objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}:latest
      resources:
        limits:
          cpu: '1'
          memory: 2Gi
        requests:
          cpu: 500m
          memory: 1Gi
      source:
        contextDir: ${CONTEXT_DIR}
        git:
          ref: ${GIT_REF}
          uri: ${GIT_URI}
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: s2i-java:latest
            namespace: openshift
        type: Source
      triggers:
      - github:
          secret: ${GITHUB_TRIGGER_SECRET}
        type: GitHub
      - generic:
          secret: ${GENERIC_TRIGGER_SECRET}
        type: Generic
      - imageChange: {}
        type: ImageChange
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: ${NAME}
    spec:
      dockerImageRepository: ""
      tags:
      - name: latest
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
    spec:
      replicas: 1
      selector:
        deploymentconfig: ${NAME}
      strategy:
        rollingParams:
          intervalSeconds: 1
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            deploymentconfig: ${NAME}
        spec:
          containers:
          - image: ${NAME}
            imagePullPolicy: IfNotPresent
            livenessProbe:
              initialDelaySeconds: 30
              tcpSocket:
                port: 8080
              timeoutSeconds: 1
            name: ${NAME}
            resources:
              limits:
                cpu: '1'
                memory: 1Gi
              requests:
                cpu: 250m
                memory: 512Mi
              ports:
            - containerPort: 8080
              protocol: TCP
            terminationMessagePath: /dev/termination-log
          dnsPolicy: ClusterFirst
          restartPolicy: Always
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
          - ${NAME}
          from:
            kind: ImageStreamTag
            name: ${NAME}:latest
        type: ImageChange
  - apiVersion: v1
    kind: Route
    metadata:
      name: ${NAME}
    spec:
      host: ${APPLICATION_DOMAIN}
      to:
        kind: Service
        name: ${NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
    spec:
      ports:
      - name: ${NAME}-http
        port: 8080
        targetPort: 8080
      selector:
        deploymentconfig: ${NAME}
      sessionAffinity: None
      type: ClusterIP
  parameters:
  - description: The name for the application.
    displayName: Application name
    name: NAME
    required: true
    value: maven-example
  - description: 'Custom hostname for service routes.  Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>'
    displayName: Application hostname
    name: APPLICATION_DOMAIN
  - description: Git source URI for application
    name: GIT_URI
    value: https://github.com/jorgemoralespou/osev3-examples.git
  - description: Git branch/tag reference
    name: GIT_REF
    value: master
  - description: Git Directory
    name: CONTEXT_DIR
    value: spring-boot/helloworld-springboot-maven
  - description: Application options. These options will be passed to the Spring Boot
      command line
    name: APP_OPTIONS
  - description: Github trigger secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GITHUB_TRIGGER_SECRET
  - description: Generic build trigger secret
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: GENERIC_TRIGGER_SECRET
